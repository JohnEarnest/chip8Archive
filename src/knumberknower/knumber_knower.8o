#######################################
#
#  Knumber Knower
#
#  A game by John Earnest, made for
#  the 2023 Octojam 10.
#
#  Press W to advance through dialogs.
#
#  Press A/W/D to classify pairs of
#  numbers based on their value.
#  Be sure to make a choice before
#  the timer at the bottom runs out!
#
#######################################

# reserved: v0-v6,ve,vf
:alias pos-x    vd
:alias pos-y    vc
:alias digits   vb # [2,6]
:alias answer   va # {0:equal,1:a<b,2:a>b}
:alias gameover v9 # boolean flag
:alias adigits  v8
:alias time     v7

: main
	loop
		title-screen
		score-reset
		adigits  :=  2
		gameover :=  0
		loop
			game-screen
			while gameover == 0
			score-inc
		again
		score-screen
	again

#######################################
#
#  Gameplay
#
#######################################

:calc icon-0 { (     64 / 6 ) - 4 }
:calc icon-1 { ( 3 * 64 / 6 ) - 4 }
:calc icon-2 { ( 5 * 64 / 6 ) - 4 }

:macro bg-chunk {
	:calc x-off { CALLS * 8 }
	vf := x-off
	sprite vf ve 15
}
:macro bg-draw  {
	i  := solid
	ve := 16
	bg-chunk bg-chunk bg-chunk bg-chunk
	bg-chunk bg-chunk bg-chunk bg-chunk
	v1 := 12
	v0 := icon-0   i := divot sprite v0 v1 8
	v0 := icon-1   i := divot sprite v0 v1 8
	v0 := icon-2   i := divot sprite v0 v1 8
}

: outline 0x7C 0xFE 0xFE 0xFE 0xFE 0xFE 0xFE 0x7C
: divot   0x00 0x00 0x00 0x00 0xFE 0xFE 0xFE 0x7C
: icon-V  0x00 0x44 0x44 0x28 0x28 0x10 0x10 0x00
: icon-=  0x00 0x00 0x7C 0x00 0x00 0x7C 0x00 0x00
: icon-^  0x00 0x10 0x10 0x28 0x28 0x44 0x44 0x00
: single  0x80

: icons-draw
	v4 := 12
	v0 := icon-0   i := icon-V sprite v0 v4 8
	v0 := icon-1   i := icon-= sprite v0 v4 8
	v0 := icon-2   i := icon-^ sprite v0 v4 8
;

: icon-animate # (v5,v4)
	ve := 7
	sprite v5 v4 7 icon-wait i += ve
	sprite v5 v4 7 icon-wait i += ve
	sprite v5 v4 7 icon-wait i += ve
	sprite v5 v4 7 icon-wait icon-wait icon-wait
: icon-wait
	vf := 3
	delay := vf
	loop
		vf := delay
		if vf != 0 then
	again
;
: icon-validate
	if answer == ve begin
		i := check
		vf := 2
	else
		i := cross
		gameover := 1
		vf := 0
	end
	buzzer := vf
	icon-animate
	if gameover == 0 then return
: game-ended
	gameover := 1
	vf := 60
	delay := vf
	buzzer := vf
	loop
		vf := delay
		if vf == 0 then
	again
	vf := key
;

: game-screen
	clear
	bg-draw

	digits := adigits
	i := num-a
	num-pick
	i := num-b
	num-pick
	nums-compare

	i := num-a
	pos-y := 3
	num-draw
	i := num-b
	pos-y := 22
	num-draw

	icons-draw
	v0 := OCTO_KEY_A
	v1 := OCTO_KEY_W
	v2 := OCTO_KEY_D
	v3 := -1
	ve := 31

	time := 62
	i := single
	sprite time ve 1
	:const TIMER_DELAY 3
	vf := TIMER_DELAY
	delay := vf
	loop
		if v0 key then v3 := 2
		if v1 key then v3 := 0
		if v2 key then v3 := 1
		vf := delay
		if vf == 0 begin
			vf := TIMER_DELAY
			delay := vf
			i := single
			sprite time ve 1
			time -= 2
			sprite time ve 1
		end
		if time == 0 then jump game-ended
		if v3 == -1 then
	again
	:macro highlight-icon KEYREG VAL X ICON {
		if v3 == VAL begin
			v5 := X
			sprite v5 v4 8
			loop if KEYREG key then again
			sprite v5 v4 8
			i := ICON
			sprite v5 v4 8
			ve := VAL
			icon-validate
		end
	}
	i := outline
	highlight-icon v0 2 icon-0 icon-V
	highlight-icon v1 0 icon-1 icon-=
	highlight-icon v2 1 icon-2 icon-^
;

#######################################
#
#  Numbers
#
#######################################

: num-a 0 0 0 0 0 0 0 0 0 0 0 # 1 padding + 6 digits + 4 padding
: num-b 0 0 0 0 0 0 0 0 0 0 0

: num-draw
	load v6 # digits are now in v1-v6
	# find the leading digit
	digits := adigits
	if digits == 6 begin if v1 == 0 then digits -= 1 end
	if digits == 5 begin if v2 == 0 then digits -= 1 end
	if digits == 4 begin if v3 == 0 then digits -= 1 end
	if digits == 3 begin if v4 == 0 then digits -= 1 end
	# calculate horizontal justifcation
	pos-x := 0
	:macro digit-sum REG {
		if REG == 0 then pos-x += 10
		pos-x += REG
		pos-x += 1
	}
	digit-sum v6 if digits == 2 then jump num-haswidth
	digit-sum v5 if digits == 3 then jump num-haswidth
	digit-sum v4 if digits == 4 then jump num-haswidth
	digit-sum v3 if digits == 5 then jump num-haswidth
	digit-sum v2 if digits == 6 then jump num-haswidth
	digit-sum v1
: num-haswidth
	i := hcenter
	i += pos-x
	load v0
	pos-x := v0
	# actually draw the number
	:macro digit-draw REG {
		i  := numbers
		ve := REG
		ve += ve  # *2
		ve += ve  # *4
		ve += ve  # *8
		i  += ve
		sprite pos-x pos-y 7
		pos-x -= REG
		if REG == 0 begin
			pos-x -= 8
			i := number-0
			sprite pos-x pos-y 7
			pos-x -= 2
		end
		if REG == 9 begin
		  pos-x += 1
			i := number-9
			sprite pos-x pos-y 7
			pos-x -= 1
		end
		pos-x -= 1
	}
	digit-draw v6
	digit-draw v5 if digits == 2 then return
	digit-draw v4 if digits == 3 then return
	digit-draw v3 if digits == 4 then return
	digit-draw v2 if digits == 5 then return
	digit-draw v1
;

: num-pick
	v1 := 0
	v2 := 0
	v3 := 0
	v4 := 0
	:macro digit-pick REG {
		:calc reroll { HERE }
		REG := random 0xF
		if REG > 9 then jump reroll
	}
	digit-pick v6
	digit-pick v5 if adigits == 2 then jump num-haspicked
	digit-pick v4 if adigits == 3 then jump num-haspicked
	digit-pick v3 if adigits == 4 then jump num-haspicked
	digit-pick v2 if adigits == 5 then jump num-haspicked
	digit-pick v1
: num-haspicked
	save v6
;

: nums-compare
	i := stash
	save vd
	# calculate an offset so that the leading digit is read first:
	ve := 6
	ve -= adigits
	# load all deigits
	i := num-b
	i += ve
	load v6
	v7 := v1
	v8 := v2
	v9 := v3
	va := v4
	vb := v5
	vc := v6
	i := num-a
	i += ve
	load v6
	# num-a in 1,2,3,4,5,6
	# num-b in 7,8,9,a,b,c 
	ve := 0
	:macro digit-cmp REG {
		:alias OTHER { REG + 6 }
		if REG < OTHER begin ve := 1 jump nums-compared end
		if REG > OTHER begin ve := 2 jump nums-compared end
	}
	digit-cmp v1
	digit-cmp v2
	digit-cmp v3
	digit-cmp v4
	digit-cmp v5
	digit-cmp v6
: nums-compared
	i := stash
	load vd
	answer := ve
;

#######################################
#
#  Graphics and Working Memory
#
#######################################

: stash
	0 0 0 0 0 0 0 0  0 0 0 0 0 0 0 0

: solid # 8x15 pixels
	0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
	0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF
: numbers #8x7 tiles, right-justified, padded to 8
	0xFE 0x01 0x0F 0x31 0xC1 0x01 0xFE 0x00 # 0
	0x01 0x01 0x01 0x01 0x01 0x01 0x01 0x00 # 1
	0x03 0x03 0x01 0x01 0x02 0x02 0x03 0x00 # 2
	0x02 0x05 0x01 0x02 0x01 0x05 0x02 0x00 # 3
	0x01 0x03 0x05 0x09 0x0F 0x01 0x01 0x00 # 4
	0x1F 0x10 0x1E 0x01 0x01 0x11 0x0E 0x00 # 5
	0x1E 0x20 0x3E 0x21 0x21 0x21 0x1E 0x00 # 6
	0x7F 0x01 0x02 0x04 0x08 0x08 0x08 0x00 # 7
	0x7E 0x81 0x81 0x7E 0x81 0x81 0x7E 0x00 # 8
	0xFE 0x01 0x01 0x01 0xFF 0x01 0xFE 0x00 # 9
: number-9 # left half of 9 (1px)
	0x00 0x01 0x01 0x01 0x00 0x00 0x00
: number-0 # left half of 0 (2px)
	0x01 0x02 0x02 0x02 0x03 0x02 0x01

: hcenter # 64-entry table of x offsets for centering numbers:
	:macro ce { :byte { 60 - floor 0.5 * 64 - CALLS } }
	ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce
	ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce
	ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce
	ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce

: check # 8x7, 4 frames, pre-xored:
	0x02 0x04 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x08 0x18 0x10 0x20 0x00
	0x00 0x00 0x00 0x00 0x40 0x00 0x00
	0x00 0x00 0x40 0x40 0x20 0x00 0x00
: cross # 8x7, 4 frames, pre-xored:
	0x02 0x04 0x08 0x00 0x00 0x00 0x00
	0x00 0x00 0x00 0x30 0x60 0x60 0x00
	0x40 0x20 0x00 0x00 0x00 0x00 0x00
	0x00 0x08 0x10 0x08 0x04 0x02 0x00

#######################################
#
#  Title Sequence
#
#######################################

: title-strip
	vf := 8
	delay := vf
	v0 := 0
	ve := 15
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15  v0 += 8  i += ve  if vc key then vd := 1
	sprite v0 v1 15
	loop
		vf := delay
		if vf == 0 then return
	again

: tutorialized 0

: title-screen
	vc := OCTO_KEY_W
	vd := 0
	v1 := 1
	i := title-knumber-0 title-strip
	i := title-knumber-1 title-strip
	i := title-knumber-2 title-strip
	i := title-knumber-3 title-strip
	i := title-knumber-3 title-strip
	v1 := 16
	i := title-knower-0 title-strip
	i := title-knower-1 title-strip
	i := title-knower-2 title-strip
	i := title-knower-3 title-strip
	i := title-knower-3 title-strip
	loop
		vf := 30
		delay := vf
		loop
			vf := delay
			if vc key then vd := 1
			if vd != 0 then jump title-finish
			if vf != 0 then
		again
		v1 := 1
		i := title-knumber-3 title-strip
		i := title-knumber-3 title-strip
		while vd == 0
		v1 := 16
		i := title-knower-3  title-strip
		i := title-knower-3  title-strip
		while vd == 0
	again
	: title-finish
	v1 := 1
	i := title-knumber-3 title-strip
	i := title-knumber-3 title-strip
	i := title-knumber-2 title-strip
	i := title-knumber-1 title-strip
	i := title-knumber-0 title-strip
	v1 := 16
	i := title-knower-3 title-strip
	i := title-knower-3 title-strip
	i := title-knower-2 title-strip
	i := title-knower-1 title-strip
	i := title-knower-0 title-strip

	i := tutorialized
	load v0
	if v0 != 0 then return
	v0 := 1
	i := tutorialized
	save v0

	loop if vc key then again
	v1 := 1
	i := controls-A title-strip
	v1 := 16
	i := controls-B title-strip
	v0 := 28
	v1 := 4
	i := solid
	loop
		vf := 10
		delay := vf
		loop
			if vc key then jump controls-finish
			vf := delay
			if vf != 0 then
		again
		sprite v0 v1 8
	again
	: controls-finish
	loop if vc key then again
	clear
;

: title-wait
	vf := 1
	delay := vf
	loop
		vf := delay
		if vf == 0 then return
	again

: title-knumber-0
	0x0E 0x0E 0x0F 0x0F 0x0E 0x0E 0x0E 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xEC 0xCE 0x8F 0xCF 0xEE 0xEE 0xEF 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xF7 0x77 0xF7 0xF7 0xF7 0x73 0x30 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x77 0x77 0x77 0x77 0xF7 0xF7 0xF7 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x0D 0xDD 0xFD 0x5D 0x1D 0x1D 0x1D 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xF9 0xDD 0xFD 0xFD 0xDD 0xFD 0xF9 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xFB 0xFB 0xCB 0xE3 0xCB 0xFB 0xFB 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xE0 0xF0 0xB0 0xE0 0xF0 0xF0 0xB0 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: title-knumber-1
	0x12 0x13 0x12 0x10 0x11 0x13 0x12 0x1C 0x1C 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x20 0x40 0x40 0x21 0x01 0x01 0xEE 0xEF 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x80 0x00 0x00 0x84 0xC7 0x73 0x30 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x00 0x00 0x80 0x80 0x00 0xF7 0xF7 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x00 0xA0 0x40 0x00 0x00 0x1D 0x1D 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x20 0x20 0x00 0x24 0x20 0x04 0xFD 0xF9 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x10 0x00 0x28 0x38 0x20 0xFB 0xFB 0x00 0x00 0x00 0x00 0x00 0x00
	0x10 0x08 0x28 0x58 0x08 0x00 0x48 0xB8 0x98 0x00 0x00 0x00 0x00 0x00 0x00
: title-knumber-2
	0x25 0x24 0x26 0x24 0x20 0x23 0x23 0x27 0x27 0x39 0x39 0x39 0x39 0x00 0x00
	0x30 0x30 0x50 0x10 0xD0 0xF0 0xF1 0x73 0x33 0xDC 0xDC 0xDC 0xDE 0x00 0x00
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x84 0xC7 0xF7 0x73 0x33 0x30 0x00 0x00
	0x01 0x00 0x00 0x00 0x00 0x00 0x80 0x80 0x80 0xF7 0xF7 0xF7 0xF7 0x00 0x00
	0x00 0x40 0x20 0x00 0xA0 0x60 0x20 0x00 0x00 0x1D 0x1D 0x1D 0x1D 0x00 0x00
	0x00 0x00 0x00 0x20 0x04 0x24 0x04 0x20 0x34 0xDD 0xFD 0xFD 0xF9 0x00 0x00
	0x06 0x06 0x16 0x12 0x12 0x02 0x1A 0x3A 0x3A 0xC1 0xCD 0xFD 0xFD 0x00 0x00
	0x08 0x04 0x44 0x74 0x24 0x0C 0x00 0x48 0x60 0xFC 0xDC 0xDC 0xCC 0x00 0x00
: title-knumber-3
	0x4A 0x4A 0x48 0x4C 0x49 0x40 0x43 0x45 0x4C 0x4E 0x4A 0x4A 0x4A 0x73 0x73
	0x65 0x62 0x23 0xA1 0x21 0x20 0x20 0xA6 0xE7 0xE5 0x65 0x64 0x66 0xB8 0xBC
	0x19 0x99 0x99 0x19 0x19 0x19 0x19 0x19 0x19 0x19 0x9D 0xDC 0xD7 0x67 0x61
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x80 0x80 0x80 0x00 0xF7 0xF7
	0x0B 0x93 0x43 0x23 0x03 0x83 0x43 0x33 0x13 0x13 0x13 0x13 0x13 0x0E 0x0E
	0x05 0x03 0x33 0x3B 0x13 0x07 0x05 0x21 0x23 0x3B 0x1B 0x13 0x07 0xFE 0xFC
	0x03 0x03 0x2B 0x11 0x0D 0x3D 0x21 0x21 0x21 0x21 0x2D 0x1D 0x1B 0xFE 0xFE
	0x04 0x02 0x32 0x2A 0x3A 0x12 0x06 0x0C 0x00 0x00 0x20 0x32 0x22 0xEE 0xE6
: title-knower-0
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x77 0x76 0x7C 0x7E 0x77 0x77 0x77
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x67 0x73 0x7F 0x7F 0x77 0x73 0x79
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x9E 0xBF 0xBB 0xBB 0xBF 0xBF 0x9E
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x71 0x71 0x71 0x75 0x7F 0x7B 0x71
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xDF 0xDF 0xDC 0xDE 0xDC 0xDF 0xDF
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xBC 0xBE 0xB6 0x3C 0xBE 0xBE 0xB6
: title-knower-1
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x00 0x00 0x00 0x00 0x00 0xE7 0xEF 0x99 0x8A 0x82 0x91 0x90 0x90 0x90
	0x00 0x00 0x00 0x00 0x00 0x00 0x67 0x77 0x18 0x0C 0x00 0x00 0x08 0x04 0x0A
	0x00 0x00 0x00 0x00 0x00 0x00 0x3E 0x3E 0xE9 0xC8 0xCC 0xCC 0xC0 0x81 0xA0
	0x00 0x00 0x00 0x00 0x00 0x00 0x71 0x71 0x00 0x00 0x04 0x0A 0x00 0x00 0x00
	0x00 0x00 0x00 0x00 0x00 0x00 0xDF 0xDF 0x02 0x01 0x02 0x02 0x01 0x00 0x00
	0x00 0x00 0x00 0x00 0x00 0x00 0xBE 0xBF 0x0F 0x89 0x89 0x02 0x01 0x09 0x05
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: title-knower-2
	0x00 0x00 0x03 0x03 0x03 0x03 0x03 0x03 0x03 0x03 0x03 0x03 0x03 0x03 0x03
	0x00 0x00 0x9D 0x9D 0xB9 0xB9 0x16 0x0E 0x1F 0x45 0x43 0x72 0x7A 0x7A 0x7A
	0x00 0x00 0xCF 0xE7 0xF7 0xFF 0x98 0x88 0x80 0xA0 0xB0 0xB0 0xB8 0xB4 0x90
	0x00 0x00 0x1C 0x3E 0x3E 0x77 0x49 0x49 0x00 0x00 0x00 0x00 0x41 0x00 0x22
	0x00 0x00 0x71 0x71 0x71 0x71 0x00 0x04 0x06 0x0E 0x0A 0x00 0x00 0x00 0x00
	0x00 0x00 0xDF 0xDF 0xDC 0xDF 0x00 0x03 0x01 0x02 0x02 0x00 0x01 0x00 0x00
	0x00 0x00 0xDF 0xDF 0xDD 0x1C 0xA3 0xA0 0xAC 0x28 0x20 0x21 0x62 0x6A 0x6F
	0x00 0x00 0x80 0xC0 0xC0 0xC0 0xC0 0xC0 0x80 0x00 0x80 0xC0 0xC0 0xC0 0xC0
: title-knower-3
	0x07 0x07 0x04 0x04 0x04 0x04 0x04 0x04 0x04 0x04 0x04 0x04 0x04 0x04 0x04
	0x3B 0x3B 0xA6 0xEE 0xDA 0x5A 0x32 0x02 0x82 0xCA 0x86 0xA6 0xA6 0xA6 0xA6
	0x9E 0xCE 0x01 0x09 0x19 0x01 0x01 0x41 0x41 0x41 0x51 0x41 0x49 0x45 0x25
	0x3C 0x7E 0x62 0xD9 0xD9 0x90 0x90 0x90 0x90 0x90 0x90 0x90 0x40 0x40 0x20
	0x70 0x70 0x01 0x01 0x01 0x01 0x05 0x03 0x08 0x00 0x00 0x00 0x00 0x02 0x01
	0xEF 0xEF 0x31 0x31 0x33 0x30 0x31 0x32 0x32 0x32 0x32 0x32 0x32 0x30 0x30
	0xEF 0xEF 0xB1 0xD1 0x13 0xD2 0x12 0x10 0x10 0x10 0x10 0x11 0xB3 0x33 0x32
	0xC0 0xE0 0x60 0xA0 0xA0 0x20 0x20 0x00 0x00 0xC0 0x40 0x20 0x20 0x20 0xA0

: controls-A
	0x00 0x07 0x1F 0x33 0x33 0x73 0x79 0x79 0x7C 0x3C 0x7E 0x3E 0x3F 0x1F 0x00
	0x00 0xE0 0xF4 0x98 0x9C 0x9E 0x3E 0x3C 0x7D 0x7C 0xF8 0xF0 0xE0 0xE8 0xF0
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0xFF
	0x00 0x00 0x0F 0x10 0x14 0x14 0x14 0x14 0x15 0x12 0x10 0x0F 0x00 0x00 0x05
	0x00 0x00 0xF0 0x08 0x28 0x28 0x28 0x28 0xA8 0x48 0x08 0xF0 0x40 0xC0 0x80
	0x00 0x00 0x00 0x00 0x02 0x00 0x00 0x00 0x01 0x00 0x00 0x00 0x00 0x00 0xFF
	0x00 0x10 0x01 0xCF 0xDF 0x3F 0x3E 0x3E 0x7C 0x7C 0x79 0x79 0x79 0x3F 0x1F
	0x00 0x00 0xE0 0xF8 0x7C 0x7C 0x3E 0x3E 0x9E 0x9E 0xCE 0xCE 0xCE 0xFC 0xFA
: controls-B
	0x24 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x71 0x19 0x4D 0x03 0x01 0x01 0x01 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x18 0x24 0x42 0x7E 0x42 0x42 0x00 0xFF 0x00 0x00 0x00 0x00 0x00 0x00
	0x83 0x83 0x8B 0x87 0x8F 0x9F 0x90 0xB0 0x3F 0x30 0x30 0x3F 0x1F 0x07 0x00
	0x81 0x91 0xC1 0xE1 0xF1 0xF1 0x11 0x19 0xF8 0x18 0x16 0xF6 0xE0 0xC8 0x00
	0x00 0x7C 0x42 0x42 0x42 0x42 0x7C 0x00 0xFF 0x00 0x00 0x00 0x00 0x00 0x00
	0x8F 0x9E 0xB8 0xE9 0x84 0x80 0x80 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x30 0x00 0x20 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00

#######################################
#
#  Score Counter and Display
#
#######################################

: score       0 0 0 0 0 0 0
: score-blank 0 0 0 0 0 0 0

: score-reset
	i := score-blank
	load v6
	i := score
	save v6
;

: score-inc
	i := score
	load v6
	v6 += 1
	if v6 == 10 begin
		v6 := 0
		v5 += 1
		if v5 == 10 begin
			v5 := 0
			v4 += 1
			if v4 == 10 begin
				v4 := 0
				v3 += 1
				if v3 == 10 then v3 := 0
			end
		end
		if adigits != 6 then adigits += 1
	end
	i := score
	save v6
;

: score-screen
	clear
	v1 := 1
	i := end-score-0 title-strip
	i := end-score-1 title-strip
	i := end-score-2 title-strip
	adigits := 4
	i := score
	pos-y := 21
	num-draw
	vf := key
	clear
;

: end-score-0
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x00 0x01 0x01 0x00 0x00 0x01 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xF0 0xF9 0xCB 0xE3 0x3B 0xBB 0xF9 0xF0 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xE1 0xF3 0xBB 0x83 0xBB 0xFB 0xF3 0xE1 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0xCF 0xEF 0x6D 0x6F 0x6F 0xED 0xED 0xCD 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x9F 0xDF 0x9E 0x1E 0x98 0xD8 0xDF 0xDF 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x80 0x80 0x80 0x00 0x00 0x80 0x80 0x80 0x00 0x00 0x00 0x00 0x00 0x00 0x00
: end-score-1
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x03 0x06 0x0E 0x0E 0x07 0x02 0x00 0x0C 0x0C 0x0E 0x0F 0x07 0x00 0x00 0x00
	0x33 0x1E 0xAC 0x8C 0x15 0x35 0x17 0x1E 0x6F 0xE7 0xE7 0xC3 0x00 0x00 0x00
	0x62 0x34 0x7C 0x6D 0x55 0x15 0xFD 0x0F 0xEF 0xC7 0xC7 0x83 0x00 0x00 0x00
	0x08 0x08 0x8A 0x99 0x19 0x9A 0x9A 0xBB 0x76 0xE6 0xE6 0xC6 0x00 0x00 0x00
	0x58 0x38 0x79 0xE8 0xEF 0x1F 0x39 0x39 0x76 0x77 0x77 0x77 0x00 0x00 0x00
	0x70 0x70 0x70 0x10 0xC0 0x40 0x80 0x80 0x10 0xF0 0xF0 0xF0 0x00 0x00 0x00
: end-score-2
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
	0x0C 0x18 0x32 0x36 0x3F 0x3F 0x1F 0x03 0x0B 0x3D 0x3E 0x36 0x3B 0x3F 0x1F
	0x44 0x28 0xA8 0xB1 0xF2 0x52 0xF2 0xF2 0xF3 0x3B 0x3B 0x1D 0xCF 0xCF 0x87
	0x00 0x00 0x00 0x00 0x00 0x00 0xE0 0xE0 0xE1 0x29 0x29 0x6C 0xC7 0xC7 0x83
	0x00 0x00 0x00 0x01 0x01 0x00 0x00 0x01 0x01 0x91 0x91 0xB1 0xE7 0xE7 0xC7
	0x24 0x14 0x14 0x8D 0x4C 0xFC 0x15 0x05 0x85 0x04 0x04 0x4C 0x3B 0x3B 0x3B
	0x0C 0x0C 0x0C 0x94 0x40 0x30 0xF0 0x80 0x90 0x70 0x70 0x74 0xFC 0xFC 0xFC
	0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
